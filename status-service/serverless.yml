service: status-service

custom:
  tableName: 'orders-table-${self:provider.stage}'
  queueName: 'OrderQueue'
  dynamodb:
    start:
      migrate: true
    stages:
      - dev

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: '20201221'
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - sqs:*
          Resource:
            - 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tableName}'
            - 'arn:aws:sqs:${self:provider.region}:*:${self:custom.queueName}'
  environment:
    NODE_ENV: dev
    ORDERS_TABLE: ${self:custom.tableName}
    ORDERS_QUEUE: ${self:custom.queueName}
    ACCOUNT_ID: ${aws:accountId}

plugins:
  - serverless-plugin-typescript 
  - serverless-offline

functions:
  status:
    handler: app/handler.status
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY
  queueHandler:
    handler: app/handler.queueHandler
    events:
      - sqs:
          arn:
            'arn:aws:sqs:${self:provider.region}:${aws:accountId}:${self:custom.queueName}'